apiVersion: apps/v1
kind: Deployment
metadata:
  name: pressure-analysis
  labels:
    app: pressure-analysis
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pressure-analysis
  template:
    metadata:
      labels:
        app: pressure-analysis
    spec:
      containers:
      - name: pressure-analysis
        image: ccr.ccs.tencentyun.com/your-namespace/pressure-analysis:latest
        ports:
        - containerPort: 8000
        env:
        - name: DEEPSEEK_API_KEY
          valueFrom:
            secretKeyRef:
              name: pressure-secrets
              key: deepseek-api-key
        - name: HOST
          value: "0.0.0.0"
        - name: PORT
          value: "8000"
        - name: DEBUG
          value: "false"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: data-storage
          mountPath: /app/data
      volumes:
      - name: data-storage
        persistentVolumeClaim:
          claimName: pressure-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: pressure-analysis-service
  labels:
    app: pressure-analysis
spec:
  selector:
    app: pressure-analysis
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
      name: http
  type: LoadBalancer
---
apiVersion: v1
kind: Secret
metadata:
  name: pressure-secrets
type: Opaque
data:
  # 请将你的API key进行base64编码后替换这里
  # echo -n "your_deepseek_api_key" | base64
  deepseek-api-key: eW91cl9kZWVwc2Vla19hcGlfa2V5X2hlcmU=
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pressure-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: cbs
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pressure-analysis-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
spec:
  tls:
  - hosts:
    - your-domain.com
    secretName: pressure-analysis-tls
  rules:
  - host: your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: pressure-analysis-service
            port:
              number: 80 
# 压力采集数据分析系统 - 后端Dockerfile (优化版本)
FROM docker.m.daocloud.io/library/python:3.10-slim

# 设置环境变量
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONPATH=/app
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# 设置工作目录
WORKDIR /app

# 更换为国内镜像源 (Debian)
RUN echo "deb https://mirrors.aliyun.com/debian/ bullseye main" > /etc/apt/sources.list && \
    echo "deb https://mirrors.aliyun.com/debian/ bullseye-updates main" >> /etc/apt/sources.list && \
    echo "deb https://mirrors.aliyun.com/debian-security/ bullseye-security main" >> /etc/apt/sources.list

# 安装系统依赖和R (使用预编译包)
RUN apt-get update && apt-get install -y \
    r-base \
    r-base-core \
    r-recommended \
    r-base-dev \
    curl \
    wget \
    build-essential \
    libxml2-dev \
    libcurl4-openssl-dev \
    libssl-dev \
    libv8-dev \
    default-jdk \
    fonts-wqy-microhei \
    fonts-wqy-zenhei \
    fonts-noto-cjk \
    fontconfig \
    # 安装预编译的R包 (从Debian仓库)
    r-cran-dplyr \
    r-cran-ggplot2 \
    r-cran-tidyr \
    r-cran-readr \
    r-cran-purrr \
    r-cran-tibble \
    r-cran-stringr \
    r-cran-forcats \
    r-cran-corrplot \
    r-cran-cluster \
    r-cran-jsonlite \
    && rm -rf /var/lib/apt/lists/*

# 配置中文字体
RUN fc-cache -fv

# 安装必需的R包（确保tidyverse正确安装）
RUN R -e "options(repos = c(CRAN = 'https://mirrors.aliyun.com/CRAN/')); \
    # 必需的包列表 \
    required_packages <- c('tidyverse', 'slider', 'GGally', 'patchwork', 'plotly', 'argparse'); \
    cat('Installing required packages:', paste(required_packages, collapse=', '), '\n'); \
    install.packages(required_packages, dependencies=TRUE, Ncpus=2); \
    # 验证安装 \
    for(pkg in required_packages) { \
        if(!require(pkg, character.only=TRUE, quietly=TRUE)) { \
            stop(paste('Failed to install package:', pkg)); \
        } \
    }; \
    cat('All packages installed and verified successfully!\n')"

# 安装Python依赖
COPY backend/requirements.txt .
RUN pip install --upgrade pip setuptools wheel -i https://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com
RUN pip install --no-cache-dir -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com

# 复制后端代码
COPY backend/ ./backend/
COPY run_server.py .

# 创建必要的目录
RUN mkdir -p \
    backend/uploads \
    backend/output \
    backend/static \
    logs

# 设置权限
RUN chmod +x run_server.py

# 暴露端口
EXPOSE 8000

# 健康检查
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# 启动命令
CMD ["python3", "run_server.py"] 